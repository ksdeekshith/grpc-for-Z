name: Build grpc wheel on IBMZ

on:
  workflow_call:
    inputs:
      release:
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2  
      - uses: uraimo/run-on-arch-action@v2.2.0
        name: Install dependencies and build grpc
        id: build
        with:
          arch: s390x
          distro: ubuntu20.04
          
          # Create an artifacts directory
          setup: |
            mkdir -p "${PWD}/artifacts"
          
          # Mount the artifacts directory as /artifacts in the container
          dockerRunArgs: |
            --volume "${PWD}/artifacts:/artifacts"
            
      
          run: |            
            apt-get update -y
            apt-get install -y build-essential libssl-dev zlib1g-dev libncurses5-dev libncursesw5-dev libreadline-dev libsqlite3-dev libgdbm-dev libdb5.3-dev libbz2-dev libexpat1-dev liblzma-dev tk-dev libffi-dev wget curl git
            #apt-get install -y build-essential autoconf libtool pkg-config git wget software-properties-common curl 
            #add-apt-repository ppa:deadsnakes/ppa -y
            #apt-get install python3.9 python3-pip python3-dev libpython3.9-dev -y
            
            # Installing python3.9
            cd /tmp
            wget https://www.python.org/ftp/python/3.9.11/Python-3.9.11.tgz
            tar -xf Python-3.9.11.tgz
            cd Python-3.9.11
            ./configure --enable-optimizations
            make -j $(nproc) && make altinstall
            cd /
            
            # Installing pip
            curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
            python3.9 get-pip.py
            
            #Building grpc
            echo "Building grpc ${{ inputs.release }}"
            python3.9 -m pip install --upgrade pip
            apt-get install openssl libssl-dev -y 
            echo "Building grpc ${{ inputs.release }}"
            GRPC_PYTHON_BUILD_SYSTEM_OPENSSL=1 pip install grpcio==${{ inputs.release }} 
            WHEEL_PATH=$(find /root/.cache/pip/wheels/ -name "grpcio*.whl")
            WHEEL_NAME=$(basename $(find /root/.cache/pip/wheels/ -name "grpcio*.whl"))
            echo $WHEEL_PATH
            echo $WHEEL_NAME
            cp $WHEEL_PATH /artifacts/$WHEEL_NAME
            ls /artifacts/            
                      
      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ inputs.release }}
          token: ${{ secrets.GITHUB_TOKEN }}
          allowUpdates: true
          artifacts: ./artifacts/grpcio-${{ inputs.release }}-cp39-cp39-linux_s390x.whl
          name: ${{ inputs.release }}
          replacesArtifacts: true
          draft: false
          prerelease: false
